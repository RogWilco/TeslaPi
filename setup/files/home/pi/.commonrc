# ============================================================================
# PATH Additions
# ============================================================================

# SSH
export PATH=~/.ssh/bin:$PATH

# Scripts
export PATH=~/Scripts:$PATH

# User Binaries
export PATH=~/.bin:~/.local/bin:$PATH

# Ruby Version Manager
export PATH="$PATH:$HOME/.rvm/bin"

# Node Executables
export PATH=~/.local/share/npm/bin:$PATH

# ============================================================================
# Authentication Tokens
# ============================================================================
source ~/.authn

# ============================================================================
# Terminal Colors (after installing GNU coreutils)
# ============================================================================
export COLOR_NONE="\033[0m"
export COLOR_BLACK="\033[0;30m"
export COLOR_WHITE="\033[1;37m"
export COLOR_BLUE="\033[0;34m"
export COLOR_BLUE_LT="\033[1;34m"
export COLOR_GREEN="\033[0;32m"
export COLOR_GREEN_LT="\033[1;32m"
export COLOR_CYAN="\033[0;36m"
export COLOR_CYAN_LT="\033[1;36m"
export COLOR_RED="\033[0;31m"
export COLOR_RED_LT="\033[1;31m"
export COLOR_PURPLE="\033[0;35m"
export COLOR_PURPLE_LT="\033[1;35m"
export COLOR_YELLOW="\033[0;33m"
export COLOR_YELLOW_LT="\033[1;33m"
export COLOR_GRAY="\033[1;30m"
export COLOR_GRAY_LT="\033[0;37m"

NM="\[\033[0;38m\]"		# Means no background and white lines.
HI="\[\033[0;37m\]"		# Change this for letter colors.
HII="\[\033[0;31m\]"	# Change this for letter colors.
SI="\[\033[0;33m\]"		# This is for the current directory.
IN="\[\033[0m\]"

export GIT_PS1_SHOWCOLORHINTS=1
export GIT_PS1_SHOWDIRTYSTATE=1
#export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_STATESEPARATOR=""

export GIT_PS1_SYMBOL_UNTRACKED=" ●"
export GIT_PS1_SYMBOL_UNSTAGED=" ●"
export GIT_PS1_SYMBOL_STAGED=" ●"
export GIT_PS1_SYMBOL_STASHED=" ★"
export GIT_PS1_SYMBOL_AHEAD=" »"
export GIT_PS1_SYMBOL_BEHIND=" «"
export GIT_PS1_SYMBOL_DIVERGED=" ⬍"
export GIT_PS1_SYMBOL_CURRENT=""

LS_COLORS=$LS_COLORS:'ex=0;35';
export LS_COLORS

# ============================================================================
# Aliases
# ============================================================================
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias lr='ls -R'							# recursive ls
alias mkdir="mkdir -p"
alias lsd="dirs -lv"
alias c="clear"
alias e="exit"
alias svna="svn status | grep \"^\\?\" | awk '{print $2}' | xargs svn add"
alias svnfix="chflags -R nouchg *"
alias rmsvn="find . -name .svn -print0 | xargs -0 rm -rf"
alias g='git'
alias trashdbx="find . -name \*\'s\ conflicted\ copy\ \* -exec mv -v {} ~/.Trash/ \;"
alias rmdbx="find . -name *\ \(*conflicted* -exec rm {} \;" # recursively delete Dropbox conflicted files
alias rmdbt="find . -name *\ \(*conflicted* -exec mv -v {} ~/.Trash/ \;" # recursively move Dropbox conflicted files to the trash
alias fuckit="cd ..; rm -rf ~-"
alias startss='open -a /System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app'
alias stopss='killall -1 ScreenSaverEngine'
alias murder='kill -9'
alias ld='localdev'

if hash gls 2>/dev/null; then
	alias ls="gls -al --color=auto --group-directories-first"
else
	alias ls="ls -al --color=always"
fi

linkup() {
	if [ $# -lt 2 ]
	then
		return 1
	fi

	local target="$1"
	local symlink="$2"
	local directory=$(dirname "$symlink")

	# If linking a directory, delete an existing directory at that location.
	rm -rf "$symlink"

	# Backfill nonexistent directories in symlink's path.
	mkdir -p "$directory"

	# Create new symlink.
	ln -Fs "$target" "$symlink"
}

@() {
	if [ $# -lt 1 ]
	then
		return 1
	fi

	script -q "./${1}.out" "$@"
}

# ============================================================================
# Miscellaneous
# ============================================================================
export DIRENV_LOG_FORMAT="$(printf "$COLOR_GRAY | %%s$COLOR_NONE")"
export EDITOR=gedit
export NODE_ENV="development"

# Load RVM into a shell session *as a function*
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

for f in ~/.profile-*; do
	if [ -e "$f" ]; then
		source "$f"
	fi
done &> /dev/null

export N_PREFIX="$HOME/.local/share/nodejs"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo)
